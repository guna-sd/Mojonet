from torch import Tensor
import torch

# def test_relu():
#     x = Tensor([[0.1315377950668335, 0.458650141954422],[1.21895918250083923, 0.67886471748352051]])
#     x.requires_grad = True
#     y = torch.nn.GELU().forward(x)
#     print(y.backward(x))

#     print(y[0][0].item())
#     print(y[0][1].item())
#     print(y[1][0].item())
#     print(y[1][1].item())
#     print(x==y)
# test_relu()
# 0.07265163213014603
# 0.3103947937488556
# 1.0831307172775269
# 0.5100910067558289

# class Module:

#     def zero_grad(self):
#         for p in self.parameters():
#             p.grad = 0

#     def parameters(self):
#         return []

inputs = Tensor([[[-0.365234375, 2.046875, 0.099609375, 0.1005859375, 1.390625],
[6.375, 3.0625, -0.3828125, -2.0625, -2.8125],
[-2.3125, -6.03125, -2.6875, -0.5546875, -0.2216796875],
[1.1328125, 4.21875, -1.0078125, 3.640625, -0.85546875]],
[[-3.9375, -1.4140625, 5.03125, -1.21875, -1.8203125],
[-2.96875, 3.3125, -2.921875, 0.4765625, 4.25],
[1.703125, 1.546875, 3.34375, -4.3125, 2.828125],
[-1.25, -0.404296875, 2.234375, 0.287109375, 0.056640625]],
[[-0.47265625, 3.3125, 0.3984375, 0.380859375, 2.96875],
[2.796875, -2.21875, 6.0, 2.328125, 4.03125],
[-1.484375, -1.7421875, 2.75, -3.71875, 1.65625],
[-2.78125, -2.109375, -1.1484375, -1.0703125, -1.3515625]],
[[3.59375, 2.09375, -4.96875, 0.2109375, 4.96875],
[0.47265625, -5.59375, 7.40625, -5.84375, -6.40625],
[-0.46484375, 3.515625, 6.125, -3.21875, 0.9296875],
[-0.462890625, 4.71875, 3.171875, 0.7421875, 0.024658203125]]])

tensor1 = Tensor([[[0, 2, 0, 0, 1],
[6, 3, 0, -2, -2],
[-2, -6, -2, 0, 0],
[1, 4, -1, 3, 0]],
[[-3, -1, 5, -1, -1],
[-2, 3, -2, 0, 4],
[1, 1, 3, -4, 2],
[-1, 0, 2, 0, 0]],
[[0, 3, 0, 0, 2],
[2, -2, 6, 2, 4],
[-1, -1, 2, -3, 1],
[-2, -2, -1, -1, -1]],
[[3, 2, -4, 0, 4],
[0, -5, 7, -5, -6],
[0, 3, 6, -3, 0],
[0, 4, 3, 0, 0]]]).type(torch.int16)

tensor2 = Tensor([[[-4, 4, -2, -1],
[-1, 6, 0, -5],
[0, 0, 0, -2],
[-1, 0, 5, 0],
[0, 2, -2, 2]],
[[0, 1, -3, 0],
[1, 0, 0, -2],
[-2, 0, 2, 2],
[0, -4, -5, 0],
[1, -2, -3, -4]],
[[3, 3, -4, 0],
[-2, 0, 0, 1],
[1, 1, 0, -2],
[3, -1, -1, -1],
[0, 0, 1, -3]],
[[3, 1, 2, 0],
[0, 6, 0, 0],
[-3, 0, 1, 0],
[1, 1, 3, 2],
[4, 0, -3, -1]]]).type(torch.int16)



a = tensor1 @ tensor2
print(a)
print(a.shape)